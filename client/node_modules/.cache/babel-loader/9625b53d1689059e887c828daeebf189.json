{"ast":null,"code":"var _jsxFileName = \"/Users/Simon/Desktop/Coding/calendar/client/src/components/Day.js\";\nimport React from 'react';\nimport dateFns from 'date-fns';\nimport '../styles/components/day.css';\n\nvar Day = function Day(props) {\n  var formattedDate = props.formattedDate,\n      selectedDate = props.selectedDate,\n      day = props.day,\n      monthStart = props.monthStart,\n      pickDate = props.pickDate,\n      shift = props.shift;\n  var cloneDay = day;\n  return React.createElement(\"div\", {\n    className: \"dayItem \".concat(!dateFns.isSameMonth(day, monthStart) ? 'disabled' : dateFns.isSameDay(day, selectedDate) ? 'selected' : '', \" \").concat(shift.length > 0 && shift[0].shift),\n    key: day,\n    onClick: function onClick() {\n      return pickDate(cloneDay);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, formattedDate), shift.length > 0 && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, shift[0].shift));\n};\n\nexport default Day;","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/calendar/client/src/components/Day.js"],"names":["React","dateFns","Day","props","formattedDate","selectedDate","day","monthStart","pickDate","shift","cloneDay","isSameMonth","isSameDay","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,8BAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA,MACXC,aADW,GACuDD,KADvD,CACXC,aADW;AAAA,MACIC,YADJ,GACuDF,KADvD,CACIE,YADJ;AAAA,MACkBC,GADlB,GACuDH,KADvD,CACkBG,GADlB;AAAA,MACuBC,UADvB,GACuDJ,KADvD,CACuBI,UADvB;AAAA,MACmCC,QADnC,GACuDL,KADvD,CACmCK,QADnC;AAAA,MAC6CC,KAD7C,GACuDN,KADvD,CAC6CM,KAD7C;AAEnB,MAAMC,QAAQ,GAAGJ,GAAjB;AACA,SACE;AACE,IAAA,SAAS,oBACP,CAACL,OAAO,CAACU,WAAR,CAAoBL,GAApB,EAAyBC,UAAzB,CAAD,GACI,UADJ,GAEIN,OAAO,CAACW,SAAR,CAAkBN,GAAlB,EAAuBD,YAAvB,IACA,UADA,GAEA,EALG,cAMLI,KAAK,CAACI,MAAN,GAAe,CAAf,IAAoBJ,KAAK,CAAC,CAAD,CAAL,CAASA,KANxB,CADX;AAQE,IAAA,GAAG,EAAEH,GARP;AASE,IAAA,OAAO,EAAE;AAAA,aAAME,QAAQ,CAACE,QAAD,CAAd;AAAA,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BN,aAA1B,CAXF,EAYGK,KAAK,CAACI,MAAN,GAAe,CAAf,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAAC,CAAD,CAAL,CAASA,KAAb,CAZvB,CADF;AAgBD,CAnBD;;AAoBA,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport dateFns from 'date-fns';\nimport '../styles/components/day.css';\n\nconst Day = props => {\n  const { formattedDate, selectedDate, day, monthStart, pickDate, shift } = props;\n  const cloneDay = day;\n  return (\n    <div\n      className={`dayItem ${\n        !dateFns.isSameMonth(day, monthStart)\n          ? 'disabled'\n          : dateFns.isSameDay(day, selectedDate)\n          ? 'selected'\n          : ''\n      } ${shift.length > 0 && shift[0].shift}`}\n      key={day}\n      onClick={() => pickDate(cloneDay)}\n    >\n      <span className=\"number\">{formattedDate}</span>\n      {shift.length > 0 && <p>{shift[0].shift}</p>}\n    </div>\n  );\n};\nexport default Day;\n"]},"metadata":{},"sourceType":"module"}