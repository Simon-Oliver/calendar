{"ast":null,"code":"import _toConsumableArray from \"/Users/Simon/Desktop/Coding/calendar/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Simon/Desktop/Coding/calendar/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Simon/Desktop/Coding/calendar/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Simon/Desktop/Coding/calendar/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Simon/Desktop/Coding/calendar/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Simon/Desktop/Coding/calendar/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Simon/Desktop/Coding/calendar/client/src/components/Calendar.js\";\nimport React from 'react';\nimport dateFns from 'date-fns';\nimport Days from './Days';\nimport ShiftModal from './ShiftModal';\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      shifts: [{\n        date: new Date(),\n        shift: ''\n      }],\n      selectedShift: undefined\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.renderHeader = function () {\n      var dateFormat = 'MMMM YYYY';\n      return React.createElement(\"div\", {\n        className: \"dateHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon arrow\",\n        onClick: _this.prevMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"chevron_left\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", dateFns.format(_this.state.currentMonth, dateFormat)), React.createElement(\"div\", {\n        className: \"icon arrow\",\n        onClick: _this.nextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"chevron_right\"));\n    };\n\n    _this.pickDate = function (date) {\n      var shift = _this.state.shifts.filter(function (e) {\n        return dateFns.format(e.date, 'DD MM YY') === dateFns.format(date, 'DD MM YY');\n      });\n\n      if (shift.length > 0) {\n        _this.setState(function () {\n          return {\n            selectedShift: shift[0]\n          };\n        });\n      } else {\n        _this.setState(function () {\n          return {\n            selectedShift: {\n              date: date\n            }\n          };\n        });\n      }\n    };\n\n    _this.onSubmit = function (updatedShift) {\n      var prevShifts = _this.state.shifts.filter(function (e) {\n        return dateFns.format(updatedShift.date, 'DD MM YY') !== dateFns.format(e.date, 'DD MM YY');\n      });\n\n      _this.setState(function () {\n        return {\n          shifts: [].concat(_toConsumableArray(prevShifts), [updatedShift])\n        };\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState(function () {\n        return {\n          selectedShift: ''\n        };\n      });\n    };\n\n    _this.renderDayHeader = function () {\n      var dateFormat = 'ddd';\n      var days = [];\n      var startDate = dateFns.startOfWeek(_this.state.currentMonth);\n\n      for (var i = 0; i < 7; i++) {\n        days.push(React.createElement(\"div\", {\n          className: \"dayNames item\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, dateFns.format(dateFns.addDays(startDate, i), dateFormat)));\n      }\n\n      return days;\n    };\n\n    _this.fetchTest = function () {\n      fetch('/hello').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return console.log(data);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.renderHeader(), this.renderDayHeader(), React.createElement(Days, {\n        currentMonth: this.state.currentMonth,\n        selectedDate: this.state.selectedDate,\n        pickDate: this.pickDate,\n        shifts: this.state.shifts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(ShiftModal, {\n        selectedShift: this.state.selectedShift,\n        closeModal: this.closeModal,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.fetchTest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/Simon/Desktop/Coding/calendar/client/src/components/Calendar.js"],"names":["React","dateFns","Days","ShiftModal","Calendar","state","currentMonth","Date","selectedDate","shifts","date","shift","selectedShift","undefined","nextMonth","setState","addMonths","prevMonth","subMonths","renderHeader","dateFormat","format","pickDate","filter","e","length","onSubmit","updatedShift","prevShifts","closeModal","renderDayHeader","days","startDate","startOfWeek","i","push","addDays","fetchTest","fetch","then","res","json","data","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dateFns from 'date-fns';\nimport Days from './Days';\nimport ShiftModal from './ShiftModal';\n\nclass Calendar extends React.Component {\n  state = {\n    currentMonth: new Date(),\n    selectedDate: new Date(),\n    shifts: [\n      {\n        date: new Date(),\n        shift: ''\n      }\n    ],\n    selectedShift: undefined\n  };\n\n  nextMonth = () => {\n    this.setState({\n      currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  prevMonth = () => {\n    this.setState({\n      currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  renderHeader = () => {\n    const dateFormat = 'MMMM YYYY';\n\n    return (\n      <div className=\"dateHeader\">\n        <div className=\"icon arrow\" onClick={this.prevMonth}>\n          chevron_left\n        </div>\n        <h3> {dateFns.format(this.state.currentMonth, dateFormat)}</h3>\n        <div className=\"icon arrow\" onClick={this.nextMonth}>\n          chevron_right\n        </div>\n      </div>\n    );\n  };\n\n  pickDate = date => {\n    const shift = this.state.shifts.filter(\n      e => dateFns.format(e.date, 'DD MM YY') === dateFns.format(date, 'DD MM YY')\n    );\n\n    if (shift.length > 0) {\n      this.setState(() => ({\n        selectedShift: shift[0]\n      }));\n    } else {\n      this.setState(() => ({\n        selectedShift: { date }\n      }));\n    }\n  };\n\n  onSubmit = updatedShift => {\n    const prevShifts = this.state.shifts.filter(\n      e => dateFns.format(updatedShift.date, 'DD MM YY') !== dateFns.format(e.date, 'DD MM YY')\n    );\n    this.setState(() => ({\n      shifts: [...prevShifts, updatedShift]\n    }));\n  };\n\n  closeModal = () => {\n    this.setState(() => ({\n      selectedShift: ''\n    }));\n  };\n\n  renderDayHeader = () => {\n    const dateFormat = 'ddd';\n    const days = [];\n\n    const startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"dayNames item\" key={i}>\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n\n    return days;\n  };\n\n  fetchTest = () => {\n    fetch('/hello')\n      .then(res => res.json())\n      .then(data => console.log(data));\n  };\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        <div className=\"grid\">\n          {this.renderHeader()}\n          {this.renderDayHeader()}\n          <Days\n            currentMonth={this.state.currentMonth}\n            selectedDate={this.state.selectedDate}\n            pickDate={this.pickDate}\n            shifts={this.state.shifts}\n          />\n        </div>\n        <ShiftModal\n          selectedShift={this.state.selectedShift}\n          closeModal={this.closeModal}\n          onSubmit={this.onSubmit}\n        />\n        <button onClick={this.fetchTest} />\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}